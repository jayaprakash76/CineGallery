{"ast":null,"code":"var _class;\nimport { FormControl, FormGroup } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction ReactiveFormComponent_option_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 25);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const country_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", country_r1.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", country_r1.name, \" \");\n  }\n}\nexport class ReactiveFormComponent {\n  constructor() {\n    this.contactForm = new FormGroup({\n      firstName: new FormControl('jaya'),\n      lastName: new FormControl(),\n      email: new FormControl(),\n      gender: new FormControl(),\n      isMarried: new FormControl(),\n      country: new FormControl(),\n      address: new FormGroup({\n        city: new FormControl(),\n        street: new FormControl(),\n        pincode: new FormControl()\n      })\n    });\n  }\n  onSubmit() {\n    console.log(this.contactForm.value);\n  }\n}\n_class = ReactiveFormComponent;\n_class.ɵfac = function ReactiveFormComponent_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-reactive-form\"]],\n  decls: 50,\n  vars: 3,\n  consts: [[1, \"container\"], [\"ngNativeValidate\", \"\", 3, \"formGroup\", \"submit\"], [\"for\", \"firstname\"], [\"type\", \"text\", \"id\", \"firstname\", \"name\", \"firstname\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"lastname\"], [\"type\", \"text\", \"id\", \"lastname\", \"name\", \"lastname\", \"ngModel\", \"\"], [\"for\", \"email\"], [\"type\", \"text\", \"name\", \"email\", \"id\", \"email\", \"ngModel\", \"\"], [\"for\", \"gender\"], [\"type\", \"radio\", \"value\", \"male\", \"id\", \"gender\", \"name\", \"gender\", \"ngModel\", \"\"], [\"type\", \"radio\", \"value\", \"female\", \"id\", \"gender\", \"name\", \"gender\", \"ngModel\", \"\"], [\"for\", \"isMarried\"], [\"type\", \"checkbox\", \"id\", \"isMarried\", \"name\", \"isMarried\", \"ngModel\", \"\"], [\"for\", \"country\"], [\"name\", \"country\", \"id\", \"country\", \"ngModel\", \"\"], [\"value\", \"\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [\"ngModelGroup\", \"address\"], [\"for\", \"city\"], [\"type\", \"text\", \"name\", \"city\", \"ngMode\", \"\"], [\"for\", \"street\"], [\"type\", \"text\", \"name\", \"street\", \"ngModel\", \"\"], [\"for\", \"pincode\"], [\"type\", \"text\", \"name\", \"pincode\", \"ngModel\", \"\"], [\"type\", \"submit\"], [3, \"ngValue\"]],\n  template: function ReactiveFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h3\");\n      i0.ɵɵtext(2, \"Template Driven Form\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 1);\n      i0.ɵɵlistener(\"submit\", function ReactiveFormComponent_Template_form_submit_3_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(4, \"p\")(5, \"label\", 2);\n      i0.ɵɵtext(6, \"First Name \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function ReactiveFormComponent_Template_input_ngModelChange_7_listener($event) {\n        return ctx.contact.firstName = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"p\")(9, \"label\", 4);\n      i0.ɵɵtext(10, \"Last Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"p\")(13, \"label\", 6);\n      i0.ɵɵtext(14, \"Email \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"p\")(17, \"label\", 8);\n      i0.ɵɵtext(18, \"Gender\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(19, \"input\", 9);\n      i0.ɵɵtext(20, \"Male \");\n      i0.ɵɵelement(21, \"input\", 10);\n      i0.ɵɵtext(22, \"Female \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"p\")(24, \"label\", 11);\n      i0.ɵɵtext(25, \"Married\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(26, \"input\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"p\")(28, \"label\", 13);\n      i0.ɵɵtext(29, \"country\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"select\", 14)(31, \"option\", 15);\n      i0.ɵɵtext(32, \"Select\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(33, ReactiveFormComponent_option_33_Template, 2, 2, \"option\", 16);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(34, \"div\", 17)(35, \"p\")(36, \"label\", 18);\n      i0.ɵɵtext(37, \"City\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(38, \"input\", 19);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(39, \"p\")(40, \"label\", 20);\n      i0.ɵɵtext(41, \"Street\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(42, \"input\", 21);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(43, \"p\")(44, \"label\", 22);\n      i0.ɵɵtext(45, \"Pin code\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(46, \"input\", 23);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(47, \"p\")(48, \"button\", 24);\n      i0.ɵɵtext(49, \"Submit\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.contactForm);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.contact.firstName);\n      i0.ɵɵadvance(26);\n      i0.ɵɵproperty(\"ngForOf\", ctx.countryList);\n    }\n  },\n  dependencies: [i1.NgForOf, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.CheckboxControlValueAccessor, i2.SelectControlValueAccessor, i2.RadioControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.NgModel, i2.NgModelGroup, i2.FormGroupDirective],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["FormControl","FormGroup","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","country_r1","id","ɵɵadvance","ɵɵtextInterpolate1","name","ReactiveFormComponent","constructor","contactForm","firstName","lastName","email","gender","isMarried","country","address","city","street","pincode","onSubmit","console","log","value","selectors","decls","vars","consts","template","ReactiveFormComponent_Template","rf","ctx","ɵɵlistener","ReactiveFormComponent_Template_form_submit_3_listener","ReactiveFormComponent_Template_input_ngModelChange_7_listener","$event","contact","ɵɵelement","ɵɵtemplate","ReactiveFormComponent_option_33_Template","countryList"],"sources":["D:\\Angular\\hello-world\\src\\app\\reactive-form\\reactive-form.component.ts","D:\\Angular\\hello-world\\src\\app\\reactive-form\\reactive-form.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-reactive-form',\n  templateUrl: './reactive-form.component.html',\n  styleUrls: ['./reactive-form.component.css']\n})\nexport class ReactiveFormComponent {\n  contactForm = new FormGroup({\n    firstName : new FormControl('jaya'),\n    lastName : new FormControl(),\n    email : new FormControl(),\n    gender : new FormControl(),\n    isMarried : new FormControl(),\n    country : new FormControl(),\n    address: new FormGroup({\n      city: new FormControl(),\n      street: new FormControl(),\n      pincode: new FormControl()\n    })\n  })\n\n    onSubmit() {\n      console.log(this.contactForm.value)\n    }\n}\n","<!-- \n<div class=\"container\">\n    <h3>Reactive Form</h3>\n    <form [formGroup]=\"contactForm\" (submit)=\"onSubmit()\" ngNativeValidate>\n        <p>\n            <label for=\"firstname\">First Name </label>\n            <input type=\"text\" #firstname=\"ngModel\" name=\"firstname\" formControlName=\"firstName\" required>\n            <span class=\"text-danger\" *ngIf=\"!firstname.valid\">Invalid FirstName</span>\n\n        </p>\n    \n        <p>\n            <label for=\"lastname\">Last Name</label>\n            <input type=\"text\" id=\"lastname\" name=\"lastname\" formControlName=\"lastName\">\n        </p>\n    \n        <p>\n            <label for=\"email\">Email </label>\n            <input type=\"text\" name=\"email\" id=\"email\" formControlName=\"email\">\n        </p>\n    \n        <p>\n            <label for=\"gender\">Gender</label>\n            <input type=\"radio\" value=\"male\" id=\"gender\" name=\"gender\" formControlName=\"gender\">Male\n            <input type=\"radio\" value=\"female\" id=\"gender\" name=\"gender\" formControlName=\"gender\">Female\n        </p>\n    \n        <p>\n            <label for=\"isMarried\">Married</label>\n            <input type=\"checkbox\" id=\"isMarried\" name=\"isMarried\"formControlName=\"isMarried\">\n        </p>\n    \n        <p>\n        <label for=\"country\">country</label>\n        <select name=\"country\" id=\"country\" formControlName=\"country\">\n            <option value=\"1\">USA</option>\n            <option value=\"2\">India</option>\n            <option value=\"3\">England</option>\n            <option value=\"4\">Srilankha</option>\n            <option value=\"5\">Singapore</option>\n        </select>\n    </p>\n\n    <div formGroupName=\"address\">\n        <div class=\"form-group\">\n            <label for=\"city\">City</label> \n            <input type=\"text\" class=\"form-control\" name=\"city\" formControlName=\"city\">\n        </div>\n\n        <div class=\"form-group\">\n            <label for=\"street\">Street</label> \n            <input type=\"text\" class=\"form-control\" name=\"street\" formControlName=\"street\">\n        </div>\n\n        <div class=\"form-group\">\n            <label for=\"pincode\">Pincode</label> \n            <input type=\"text\" class=\"form-control\" name=\"pincode\" formControlName=\"pincode\">\n        </div>\n    </div>\n\n    <p>\n        <button type=\"submit\" [disabled]=\"!contactForm.valid\">Submit</button>\n    </p>\n\n</form>\n</div> -->\n<div class=\"container\">\n    <h3>Template Driven Form</h3>\n    <form [formGroup]=\"contactForm\" (submit)=\"onSubmit()\" ngNativeValidate>\n        <p>\n            <label for=\"firstname\">First Name </label>\n            <input type=\"text\" id=\"firstname\" name=\"firstname\" [(ngModel)]=\"contact.firstName\">\n        </p>\n    \n        <p>\n            <label for=\"lastname\">Last Name</label>\n            <input type=\"text\" id=\"lastname\" name=\"lastname\" ngModel>\n        </p>\n    \n        <p>\n            <label for=\"email\">Email </label>\n            <input type=\"text\" name=\"email\" id=\"email\" ngModel>\n        </p>\n    \n        <p>\n            <label for=\"gender\">Gender</label>\n            <input type=\"radio\" value=\"male\" id=\"gender\" name=\"gender\" ngModel>Male\n            <input type=\"radio\" value=\"female\" id=\"gender\" name=\"gender\" ngModel>Female\n        </p>\n    \n        <p>\n            <label for=\"isMarried\">Married</label>\n            <input type=\"checkbox\" id=\"isMarried\" name=\"isMarried\" ngModel>\n        </p>\n    \n        <p>\n            <label for=\"country\">country</label>\n            <select name=\"country\" id=\"country\" ngModel>\n                <option value=\"\">Select</option>\n                <option [ngValue]=\"country.id\" *ngFor=\"let country of countryList\">\n                    {{country.name}}\n                </option>\n            </select>\n        </p>\n        \n        <div ngModelGroup=\"address\">\n            <p>\n                <label for=\"city\">City</label>\n                <input type=\"text\" name=\"city\" ngMode>\n            </p>\n            <p>\n                <label for=\"street\">Street</label>\n                <input type=\"text\" name=\"street\" ngModel>\n            </p>\n            <p>\n                <label for=\"pincode\">Pin code</label>\n                <input type=\"text\" name=\"pincode\" ngModel>\n            </p>\n            \n        </div>\n        <p>\n            <button type=\"submit\">Submit</button>\n        </p>\n    \n    </form>\n</div>\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}