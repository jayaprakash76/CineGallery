{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class TemplateDrivenFormComponent {\n  constructor() {\n    this.countryList = [new Country('1', 'India'), new Country('2', 'USA'), new Country('3', 'England'), new Country('4', 'Sri Lankha'), new Country('5', 'Russia')];\n  }\n}\n_class = TemplateDrivenFormComponent;\n_class.ɵfac = function TemplateDrivenFormComponent_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-template-driven-form\"]],\n  decls: 35,\n  vars: 0,\n  consts: [[1, \"container\"], [\"for\", \"firstname\"], [\"type\", \"text\", \"id\", \"firstname\", \"name\", \"firstname\"], [\"for\", \"lastname\"], [\"type\", \"text\", \"id\", \"lastname\", \"name\", \"lastname\"], [\"for\", \"email\"], [\"type\", \"text\", \"name\", \"email\", \"id\", \"email\"], [\"for\", \"gender\"], [\"type\", \"radio\", \"value\", \"male\", \"id\", \"gender\", \"name\", \"gender\"], [\"type\", \"radio\", \"value\", \"female\", \"id\", \"gender\", \"name\", \"gender\"], [\"for\", \"isMarried\"], [\"type\", \"checkbox\", \"id\", \"isMarried\", \"name\", \"isMarried\"], [\"for\", \"country\"], [\"name\", \"country\", \"id\", \"country\"], [\"selected\", \"\", \"value\", \"\"], [\"type\", \"submit\"]],\n  template: function TemplateDrivenFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h3\");\n      i0.ɵɵtext(2, \"Template Driven Form\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\")(4, \"p\")(5, \"label\", 1);\n      i0.ɵɵtext(6, \"First Name \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"p\")(9, \"label\", 3);\n      i0.ɵɵtext(10, \"Last Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"p\")(13, \"label\", 5);\n      i0.ɵɵtext(14, \"Email \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"p\")(17, \"label\", 7);\n      i0.ɵɵtext(18, \"Gender\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(19, \"input\", 8);\n      i0.ɵɵtext(20, \"Male \");\n      i0.ɵɵelement(21, \"input\", 9);\n      i0.ɵɵtext(22, \"Female \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"p\")(24, \"label\", 10);\n      i0.ɵɵtext(25, \"Married\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(26, \"input\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"p\")(28, \"label\", 12);\n      i0.ɵɵtext(29, \"country\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"select\", 13);\n      i0.ɵɵelement(31, \"option\", 14);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(32, \"p\")(33, \"button\", 15);\n      i0.ɵɵtext(34, \"Submit\");\n      i0.ɵɵelementEnd()()()();\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.NgControlStatusGroup, i1.NgForm],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nclass Country {\n  constructor(id, name) {\n    this.id = id;\n    this.name = name;\n  }\n}","map":{"version":3,"names":["TemplateDrivenFormComponent","constructor","countryList","Country","selectors","decls","vars","consts","template","TemplateDrivenFormComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","id","name"],"sources":["D:\\Angular\\hello-world\\src\\app\\template-driven-form\\template-driven-form.component.ts","D:\\Angular\\hello-world\\src\\app\\template-driven-form\\template-driven-form.component.html"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-template-driven-form',\n  templateUrl: './template-driven-form.component.html',\n  styleUrls: ['./template-driven-form.component.css']\n})\nexport class TemplateDrivenFormComponent {\n  countryList:Country[]= [\n    new Country('1','India'),\n    new Country('2', 'USA'),\n    new Country('3', 'England'),\n    new Country('4', 'Sri Lankha'),\n    new Country('5', 'Russia')\n  ]\n\n}\nclass Country {\n  id:string;\n  name:string;\n  \n  constructor(id:string, name:string) {\n    this.id=id;\n    this.name= name;\n  }\n}","<div class=\"container\">\n    <h3>Template Driven Form</h3>\n    <form>\n        <p>\n            <label for=\"firstname\">First Name </label>\n            <input type=\"text\" id=\"firstname\" name=\"firstname\">\n        </p>\n    \n        <p>\n            <label for=\"lastname\">Last Name</label>\n            <input type=\"text\" id=\"lastname\" name=\"lastname\">\n        </p>\n    \n        <p>\n            <label for=\"email\">Email </label>\n            <input type=\"text\" name=\"email\" id=\"email\">\n        </p>\n    \n        <p>\n            <label for=\"gender\">Gender</label>\n            <input type=\"radio\" value=\"male\" id=\"gender\" name=\"gender\">Male\n            <input type=\"radio\" value=\"female\" id=\"gender\" name=\"gender\">Female\n        </p>\n    \n        <p>\n            <label for=\"isMarried\">Married</label>\n            <input type=\"checkbox\" id=\"isMarried\" name=\"isMarried\">\n        </p>\n    \n        <p>\n            <label for=\"country\">country</label>\n            <select name=\"country\" id=\"country\">\n                <option selected=\"\" value=\"\"></option>\n            </select>\n        </p>\n    \n        <p>\n            <button type=\"submit\">Submit</button>\n        </p>\n    \n    </form>\n</div>\n"],"mappings":";;;AAOA,OAAM,MAAOA,2BAA2B;EALxCC,YAAA;IAME,KAAAC,WAAW,GAAY,CACrB,IAAIC,OAAO,CAAC,GAAG,EAAC,OAAO,CAAC,EACxB,IAAIA,OAAO,CAAC,GAAG,EAAE,KAAK,CAAC,EACvB,IAAIA,OAAO,CAAC,GAAG,EAAE,SAAS,CAAC,EAC3B,IAAIA,OAAO,CAAC,GAAG,EAAE,YAAY,CAAC,EAC9B,IAAIA,OAAO,CAAC,GAAG,EAAE,QAAQ,CAAC,CAC3B;;;SAPUH,2BAA2B;;mBAA3BA,MAA2B;AAAA;;QAA3BA,MAA2B;EAAAI,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,qCAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCPxCE,EAAA,CAAAC,cAAA,aAAuB;MACfD,EAAA,CAAAE,MAAA,2BAAoB;MAAAF,EAAA,CAAAG,YAAA,EAAK;MAC7BH,EAAA,CAAAC,cAAA,WAAM;MAEyBD,EAAA,CAAAE,MAAA,kBAAW;MAAAF,EAAA,CAAAG,YAAA,EAAQ;MAC1CH,EAAA,CAAAI,SAAA,eAAmD;MACvDJ,EAAA,CAAAG,YAAA,EAAI;MAEJH,EAAA,CAAAC,cAAA,QAAG;MACuBD,EAAA,CAAAE,MAAA,iBAAS;MAAAF,EAAA,CAAAG,YAAA,EAAQ;MACvCH,EAAA,CAAAI,SAAA,gBAAiD;MACrDJ,EAAA,CAAAG,YAAA,EAAI;MAEJH,EAAA,CAAAC,cAAA,SAAG;MACoBD,EAAA,CAAAE,MAAA,cAAM;MAAAF,EAAA,CAAAG,YAAA,EAAQ;MACjCH,EAAA,CAAAI,SAAA,gBAA2C;MAC/CJ,EAAA,CAAAG,YAAA,EAAI;MAEJH,EAAA,CAAAC,cAAA,SAAG;MACqBD,EAAA,CAAAE,MAAA,cAAM;MAAAF,EAAA,CAAAG,YAAA,EAAQ;MAClCH,EAAA,CAAAI,SAAA,gBAA2D;MAAAJ,EAAA,CAAAE,MAAA,aAC3D;MAAAF,EAAA,CAAAI,SAAA,gBAA6D;MAAAJ,EAAA,CAAAE,MAAA,eACjE;MAAAF,EAAA,CAAAG,YAAA,EAAI;MAEJH,EAAA,CAAAC,cAAA,SAAG;MACwBD,EAAA,CAAAE,MAAA,eAAO;MAAAF,EAAA,CAAAG,YAAA,EAAQ;MACtCH,EAAA,CAAAI,SAAA,iBAAuD;MAC3DJ,EAAA,CAAAG,YAAA,EAAI;MAEJH,EAAA,CAAAC,cAAA,SAAG;MACsBD,EAAA,CAAAE,MAAA,eAAO;MAAAF,EAAA,CAAAG,YAAA,EAAQ;MACpCH,EAAA,CAAAC,cAAA,kBAAoC;MAChCD,EAAA,CAAAI,SAAA,kBAAsC;MAC1CJ,EAAA,CAAAG,YAAA,EAAS;MAGbH,EAAA,CAAAC,cAAA,SAAG;MACuBD,EAAA,CAAAE,MAAA,cAAM;MAAAF,EAAA,CAAAG,YAAA,EAAS;;;;;;ADpBjD,MAAMZ,OAAO;EAIXF,YAAYgB,EAAS,EAAEC,IAAW;IAChC,IAAI,CAACD,EAAE,GAACA,EAAE;IACV,IAAI,CAACC,IAAI,GAAEA,IAAI;EACjB"},"metadata":{},"sourceType":"module","externalDependencies":[]}